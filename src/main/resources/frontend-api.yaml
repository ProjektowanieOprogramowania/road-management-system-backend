openapi: 3.0.3
info:
  title: Read management system Frontend API
  description: Read management system Frontend API
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
paths:
  /charges/passing/{userUUID}:
    get:
      operationId: getNotPaidPassingCharges
      tags:
        - PassingCharges
      summary: Get users not payed passing charges
      description: Get users not payed passing charges
      parameters:
        - name: userUUID
          in: path
          schema:
            type: string
            format: uuid
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PassingCharge'
  /charges/passing/{passingChargeId}/payment:
    post:
      operationId: payPassingCharge
      tags:
        - PassingCharges
      summary: Pay PassingCharge
      description: Pay PassingCharge
      parameters:
        - name: passingChargeId
          description: PassingCharge id
          in: path
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/URL'

  /charges/passing/subscription/{userUUID}:
    get:
      operationId: getUserSubscriptions
      tags:
        - Subscriptions
      summary: Get user subscriptions info
      parameters:
        - name: userUUID
          in: path
          schema:
            type: string
            format: uuid
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref:
                    '#/components/schemas/Subscription'
  /charges/passing/subscription/payment:
    get:
      operationId: getSubscriptionSummary
      tags:
        - Subscriptions
      summary: Get subscription summary for given parameters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPaymentInfo'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
    post:
      operationId: paySubscription
      tags:
        - Subscriptions
      summary: Pay subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPaymentInfo'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/URL'

  /charges/history/{userUUID}:
    get:
      operationId: getUsersCharges
      tags:
        - Charges
      summary: Get fees history
      description: Get fees history
      parameters:
        - name: userUUID
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Charge'



  /penalty/{userUUID}:
    get:
      operationId: getAllPenalties
      tags:
        - Penalties
      summary: Get user's penalties
      description: Get user's penalties
      parameters:
        - name: userUUID
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PenaltyCharge'
        404:
          description: Not found

  /tariff:
    get:
      operationId: getAllTariffs
      tags:
        - Tariffs
      summary: Get all tariffs
      description: Get all tariffs
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TariffSimplified'

    post:
      operationId: addTariff
      tags:
        - Tariffs
      summary: Add tariff
      description: Add tariff
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tariff'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tariff'
        400:
          description: Bad request

  /tariff/{tariffId}:
    get:
      operationId: getTariff
      tags:
        - Tariffs
      summary: Get particular tariff
      description: Get particular tariff
      parameters:
        - name: tariffId
          in: path
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tariff'
        404:
          description: Not found

    put:
      operationId: updateTariff
      tags:
        - Tariffs
      summary: Update tariff
      description: Update tariff
      parameters:
        - name: tariffId
          in: path
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tariff'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tariff'
        404:
          description: Not found
        400:
          description: Bad request

    delete:
      operationId: deleteTariff
      tags:
        - Tariffs
      summary: Delete tariff
      description: Delete tariff
      parameters:
        - name: tariffId
          in: path
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
        404:
          description: Not found


components:
  schemas:
    PassingCharge:
      type: object
      properties:
        id:
          type: integer
          format: int64
        passing:
          $ref: '#/components/schemas/Passing'
        charge:
          $ref: '#/components/schemas/Charge'
      required:
        - passing
        - charge

    Charge:
      type: object
      properties:
        id:
          type: integer
          format: int64
        amount:
          type: number
          format: double
          minimum: 0.0
        paid:
          type: boolean
        payment:
          $ref: '#/components/schemas/Payment'
      required:
        - amount
        - paid

    PaymentMethod:
      type: string
      enum: [ bank_transfer, blik, postal_order ]

    Payment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        amount:
          type: number
          format: double
          minimum: 0.01
        dateTime:
          type: string
          format: date-time
        paymentMethod:
          type: string
          format: PaymentMethod
      required:
        - amount
        - dateTime
        - paymentMethod

    Subscription:
      type: object
      properties:
        id:
          type: integer
          format: int64
        subscriberId:
          type: string
          format: uuid
        from:
          type: string
          format: date
        to:
          type: string
          format: date
        roads:
          type: array
          items:
            $ref: '#/components/schemas/Road'
      required:
        - id
        - subscriberId
        - from
        - to

    SubscriptionPaymentInfo:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        from:
          type: string
          format: date
        to:
          type: string
          format: date
        roadIds:
          type: array
          items:
            type: integer
      required:
        - userId
        - from
        - to
        - roadIds

    URL:
      type: object

    Road:
      type: object
      properties:
        id:
          type: integer

    Localization:
      type: object
      properties:
        id:
          type: integer
          format: int64
        latitude:
          type: string
        longitude:
          type: string
      required:
        - latitude
        - longitude

    VehicleType:
      type: string
      enum: [car, truck, motorcycle, other]

    Vehicle:
      type: object
      properties:
        id:
          type: integer
          format: int64
        ownerUserId:
          type: string
          format: uuid
        vehicleType:
          type: string
          format: VehicleType
        make:
          type: string
        model:
          type: string
        productionYear:
          type: integer
          minimum: 1800
          maximum: 2050
        registrationNumber:
          type: string
        length:
          description: Length in meters
          type: number
          format: double
          minimum: 0.0
        width:
          description: Width in meters
          type: number
          format: double
          minimum: 0.0
        height:
          description: Height in meters
          type: number
          format: double
          minimum: 0.0
        weight:
          description: Weight in kilograms
          type: number
          format: double
          minimum: 0.0
        engineVolumeCm3:
          type: integer
          minimum: 0
      required:
        - vehicleType
        - make

    Passing:
      type: object
      properties:
        id:
          type: integer
          format: int64
        payable:
          type: boolean
        dateTime:
          type: string
          format: date-time
        localization:
          $ref: '#/components/schemas/Localization'
        vehicle:
          $ref: '#/components/schemas/Vehicle'
      required:
        - payable
        - dateTime
        - localization
        - vehicle

    PenaltyCharge:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: string
          format: uuid
        description:
          type: string
        passing:
          $ref: '#/components/schemas/Passing'
        charge:
          $ref: '#/components/schemas/Charge'
        paid:
          type: boolean
      required:
        - userId
        - passing
        - charge
        - paid

    Tariff:
      type: object
      properties:
        id:
          type: integer
          format: int64
        active:
          type: boolean
        name:
          type: string
        prices:
          type: object
          additionalProperties:
            type: number
            format: double
            minimum: 0.0
      required:
        - active
        - name
        - prices

    TariffSimplified:
      type: object
      properties:
        id:
          type: integer
          format: int64
        active:
          type: boolean
        name:
          type: string
      required:
        - active
        - name